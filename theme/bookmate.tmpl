{% extends "base.tmpl" %}

{% block seo %}

<title>{{site.Name}}</title>
<link rel="canonical" href="{{site.URL}}">
<meta property="og:url" content="{{site.URL}}"/>
<meta property="og:title" content="{{site.Name}}"/>
<meta property="og:description" content="{{site.Description}}"/>
<meta property="og:type" content="website" />
<meta property="og:image" content="https://dars-portfolio.s3.us-west-2.amazonaws.com/Images/profilePhotoDarshan.jpg" />
<meta name="twitter:title" content="{{site.Name}}" />
<meta name="twitter:image" content="https://dars-portfolio.s3.us-west-2.amazonaws.com/Images/profilePhotoDarshan.jpg" />
<meta name="description" content="{{site.Description}}"/>
<meta name="twitter:description" content="{{site.Description}}" />
<script type="application/ld+json">
  {
    "@context": "https://schema.org/",
    "@type": "BlogPosting",
      "headline": "{{site.Name}}",
      "url": "{{site.URL}}",
      "description": "{{site.Description}}",
      "image": "https://dars-portfolio.s3.us-west-2.amazonaws.com/Images/profilePhotoDarshan.jpg",
      "author": {
        "@type": "Person",
        "name": "{{user.Name}}"
      }
  }
</script>
<script>
  function getQuestions() {
        console.log("reached inside function");
        const studentClass = document.getElementById("stu_class").value;
        const studentSubject = document.getElementById("stu_subject").value;
        const studentChapterName = document.getElementById("chapter_name").value;
        const label1 = "QUl6YVN5QVZIM0";
        const label2 = "JudG9SbFNZSDdW";
        const label3 = "QTM1TEJ5R0VNSU5JQ";
        const label4 = "zcxbkUzU3NtVlR3";
        let label = label1+label2+label3+label4;
        const lb = atob(label).replace(/GEMINI/gi, '');
        const url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${lb}`;
        if(studentChapterName === "" || studentClass === "" || studentSubject === "") {
            alert("Please Provide all the fields before submitting");
            return;
        }
        try {
            console.log("label - ", lb,url);
            const data = {
                "contents": [{
                "parts": [
                            {'text':  `Urgent Exam Prep - Prioritize Key Questions
Task: Analyze CBSE Class ${studentClass}, ${studentSubject} Chapter ${studentChapterName} (input from the student) question patterns from the past 10 years to create a 'crash course' list of high-priority questions 
for students with only 2 days remaining before the exam.
Focus: Repetition is Key: Questions asked multiple times across past papers take top priority. 
Concept Coverage: Ensure the question list collectively covers the core concepts tested within the chapter. Exam Day Format: Match the proportion of multiple-choice, short-answer, long-answer, and diagram-based questions typically seen on the exam.'Must-Know' 
Definitions: Include questions directly asking for key definitions within the chapter.
Method:
Question Bank: Official CBSE website for released question papers (last 5 years): 'https://www.cbse.gov.in/cbsenew/question-paper.html'
Frequency Analysis: Identify questions repeated 3 or more times. These automatically make the prioritized list.
Concept Gaps: Check the core concepts of Chapter [ChapterName]. If those directly match any questions, add those even if frequency is lower.
Balance Question Types: Aim to make the final output approximately match the percentage breakdown the CBSE exam usually has (e.g., 30% multiple choice, 40% short answers, etc.).
Output:
'Emergency Study List': A simple document with 8-15 questions that MUST be practiced. Indicate the question type and how many times it has appeared previously.
Concept Flashcards: Include a mini-deck of quick definitions or one-sentence explanations of core concepts likely to be tested.
Additional Enhancements:
Difficulty Indicator: If time allows, give questions a basic difficulty rating (Easy, Medium, Hard)
'Do Not Skip' Warnings: Highlight any definition or concept-based questions that seem non-negotiable to know before the exam.`
                }]
                }],
                "safetySettings": [
                    {
                        "category": "HARM_CATEGORY_DANGEROUS_CONTENT",
                        "threshold": "BLOCK_ONLY_HIGH"
                    }
                ],
                "generationConfig": {
                    "stopSequences": [
                        "Title"
                    ],
                    "temperature": 0.6,
                    "maxOutputTokens": 800,
                    "topP": 0.8,
                    "topK": 10
                }
            };

    fetch(url, {
        method: 'POST',
        headers: {
        'Content-Type': 'application/json', 
        },
        body: JSON.stringify(data)
    })
        .then((response) => response.json())
        .then(data => {
        
        document.getElementById("comment").innerHTML = data.candidates[0].content.parts[0].text;
    })
        .catch(error => {
        console.error('Error:', error);
  });}
  catch(e){
    console.error("Error occured: ", e);
  }
  
  }
</script>
{% endblock %}

{% block content %}

<section class="center">
  <header class="tc pv2 pv3-ns">
<article>
<div>
    <div class="ma1 w-100 pa3 mr1 hide-child pointer">
        <form class="pa4" onsubmit="return false">
            
            <label for="stu_class" class="f6 b db mb2">Class </label>
            <input id="stu_class" class=" ba b--black-20 pa2 mb2 db w-100" type="text" aria-describedby="name-desc"><br>

            <label for="stu_subject" class="f6 b db mb2">Subject </label>
            <input id="stu_subject" class=" ba b--black-20 pa2 mb2 db w-100" type="text" aria-describedby="name-desc"><br>

            <label for="chapter_name" class="f6 b db mb2">Chapter Name </label>
            <input id="chapter_name" class=" ba b--black-20 pa2 mb2 db w-100" type="text" aria-describedby="name-desc"><br>

            <article class="center mw5 mw6-ns hidden ba mv4">
            <h1 class="f4 bg-near-black white mv0 pv2 ph3">Question List *Imp*</h1>
            <div class="pa3 bt">
                <p class="f6 f5-ns lh-copy measure mv0" id="comment">
                </p>
            </div>
            </article>

            <button onclick="getQuestions()">Submit</button>
        </form>
    </div>

</div>
</article>

</header>
</section>


<section class="bt b--black-10 center lh-copy">
</section>


{% endblock %}
